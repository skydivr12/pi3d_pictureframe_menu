#!/bin/bash

TODAY=$(date +"%Y_%m_%d")
NOW=$(date +"%D_%T")
UPDAT_DIR=$HOME/.frame_updates
#LOG1="$HOME/pic_frame/logs/download_log.txt"
#LOG1_LENGTH=$(wc -l < $LOG1)
#LOG2="$HOME/pic_frame/logs/update_log.txt"
#LOG2_LENGTH=$(wc -l < $LOG2)
BIN_DIR=$HOME/pic_frame/bin
#EMAILS_BACKUP=$HOME/pic_frame/backups/get_images_from_emails.py.backup
JUNK=$HOME/unknown_file_types
RC_CONF=$HOME/.config/rclone/rclone.conf
readarray -t RCSOURCES < <(grep "\[[a-zA-Z0-9]*\]" $RC_CONF 2>/dev/null | cut -d[ -f2 | cut -d] -f1)
LEN1="${#RCSOURCES[@]}"
readarray -t MAILSOURCES < <( find "$BIN_DIR" -name "*.mail.py" -type f 2>/dev/null | rev | cut -d/ -f1 | rev | cut -d. -f1 )
LEN2="${#MAILSOURCES[@]}"
SOURCES=( "${MAILSOURCES[@]}" "${RCSOURCES[@]}" )


#if [ "$LOG1_LENGTH" -gt "1000" ]; then mv $LOG1 $LOG1_$TODAY; fi
#if [ "$LOG2_LENGTH" -gt "1000" ]; then mv $LOG2 $LOG2_$TODAY; fi

prompt() {
  read -p " Press enter to continue or CTL C to cancel."
}

set_ARR1() {
  readarray -t ARR1 < <( find $DWNLD_DIR -type f 2>/dev/null )
}

set_ARR3() {
  ARR3=()
  readarray -t ARR2 < <( find $DWNLD_DIR -type f 2>/dev/null )
  for F in "${ARR1[@]}"; do
    if [[ "${ARR2[@]}" =~ "$F" ]]; then
      continue
    else
      ARR3+=( $F )
    fi
  done
  for F in "${ARR2[@]}"; do
    if [[ "${ARR1[@]}" =~ "$F" ]]; then
      continue
    else
      ARR3+=( $F )
    fi
  done
}


sort_pics() {
  if [ "${#ARR3[@]}" -gt "0" ]; then
    for F in "${ARR3[@]}"; do
      B=$(basename $F)
      case $B in
        *.sh)
          sudo mv $F $UPDAT_DIR/
          ;;
        *.[Tt][Ii][Ff][Ff] | *.[Dd][Nn][Gg] | *.[Pp][Nn][Gg] | *.[Jj][Pp][Gg] | *.[Jj][Pp][Ee][Gg] | *.[Hh][Ee][Ii][Ff] | *.[Hh][Ee][Ii][Cc])
          sudo mogrify -auto-orient $F
          ;;
        *)
          if [ ! -d "$JUNK" ]; then mkdir -p $JUNK; fi
          sudo mv $F $JUNK/
          ;;
      esac
    done
  fi
}


download_emails() {
  for (( i=0; i<$LEN2; i++ )); do
    if [[ "${RCSOURCES[@]}" =~ "${MAILSOURCES[$i]}" ]]; then
      DRIVE_DIR=$HOME/Pictures/${MAILSOURCES[$i]}
    else
      DRIVE_DIR=$HOME/Pictures/${RCSOURCES[0]}
    fi

#    echo " DRIVE_DIR has been set as $DRIVE_DIR"
#    prompt

    EMAILS_DIR=$DRIVE_DIR/emails
    DWNLD_DIR=$EMAILS_DIR
    EMAILS="${MAILSOURCES[$i]}".mail.py

    if [ ! -d "$DRIVE_DIR" ]; then
#      echo " $DRIVE_DIR does not exist, creating."
      mkdir -p $DRIVE_DIR
#    else
#      echo " $DRIVE_DIR already exists, skipping."
    fi
#    prompt

    cd $DRIVE_DIR
#    echo " Should be in DRIVE_DIR now which is :"
#    pwd
#    prompt

    set_ARR1
    sudo python3 $BIN_DIR/$EMAILS
    if [ "$(find $DWNLD_DIR -name "* *")" ]; then
#      echo " there is at least one file that has a space in its name, renaming."
#      prompt
      find $DWNLD_DIR -name "* *" -exec sudo rename -v 's/ /_/g' {} +
    fi
    set_ARR3
    if [ "${#ARR3[@]}" -gt "0" ]; then
#      echo " New pictures have been detected, sorting."
#      prompt

      sort_pics
      set_ARR3
      if [ "$LEN1" -gt 0 ]; then
        if [ "${#ARR3[@]}" -gt "0" ]; then
#          echo " New pictures have been detected, syncing back to drive."
#          prompt
          if [[ "${RCSOURCES[@]}" =~ "${MAILSOURCES[$i]}" ]]; then
#            echo " This email has its own google drive, syncing there."
#            echo "sudo rclone move -v $DWNLD_DIR ${MAILSOURCES[$i]}:Pictures/emails/$TODAY"
#            prompt
            sudo rclone move -v $DWNLD_DIR ${MAILSOURCES[$i]}:Pictures/emails/$TODAY
          else
#            echo " This email does not have its own google drive, syncing to default connection."
#            echo "sudo rclone move -v $DWNLD_DIR ${RCSOURCES[0]}:Pictures/emails/$TODAY"
#            prompt
            sudo rclone move -v $DWNLD_DIR ${RCSOURCES[0]}:Pictures/emails/$TODAY
          fi
        fi
#      else
#        echo " You do not have any Google drive accounts setup to sync with."
      fi
    fi
  done
}


sync_google_drives() {
  if [ "$LEN1" -gt 0 ]; then
    for (( i=0; i<$LEN1; i++ )); do
      DWNLD_DIR=$HOME/Pictures/"${RCSOURCES[$i]}"
      #If download directory doesnt exist, create it.
      if [ ! -d "$DWNLD_DIR" ]; then mkdir -p $DWNLD_DIR; fi
      set_ARR1
      sudo rclone sync -v ${RCSOURCES[$i]}:Pictures $DWNLD_DIR/

      if [ "$(find $DWNLD_DIR -name "* *")" ]; then
#        echo " there is at least one file that has a space in its name, renaming."
#        prompt
        find $DWNLD_DIR -name "* *" -exec sudo rename -v 's/ /_/g' {} +
      fi
      set_ARR3
      if [ "${#ARR3[@]}" -gt "0" ]; then
        sort_pics
        set_ARR3
        if [ "${#ARR3[@]}" -gt "0" ]; then
          sudo rclone sync -v $DWNLD_DIR/ ${RCSOURCES[$i]}:Pictures
        fi
      fi
      while [ "$(find ~/Pictures -mindepth 1 -type d -empty)" ]; do
        sudo find ~/Pictures -mindepth 1 -type d -empty -exec rmdir {} +
      done
    done
#  else
#    echo " You do not have any Google Drive accounts setup to sync with."
  fi
}

download_emails
sync_google_drives
