#!/bin/bash

NOW=$(date +"%D_%T")
UPDAT_DIR=$HOME/.frame_updates
LOG1="$HOME/pic_frame/logs/download_log.txt"
LOG1_LENGTH=$(wc -l < $LOG1)
LOG2="$HOME/pic_frame/logs/update_log.txt"
LOG2_LENGTH=$(wc -l < $LOG2)
BIN_DIR=$HOME/pic_frame/bin
EMAILS_BACKUP=$HOME/pic_frame/backups/get_images_from_emails.py.backup
JUNK=$HOME/unknown_file_types
RC_CONF=$HOME/.config/rclone/rclone.conf
readarray -t RCSOURCES < <(grep "\[[a-zA-Z]*\]" $RC_CONF | cut -d[ -f2 | cut -d] -f1)
LEN1="${#RCSOURCES[@]}"
readarray -t MAILSOURCES < <( find "$BIN_DIR" -name "*.mail.py" -type f | rev | cut -d/ -f1 | rev | cut -d. -f1 )
LEN2="${#MAILSOURCES[@]}"
SOURCES=( "${MAILSOURCES[@]}" "${RCSOURCES[@]}" )
DRIVE_DIR=$HOME/Pictures/${RCSOURCES[0]}
EMAILS_DIR=$DRIVE_DIR/emails
TODAY=$(date +"%Y_%m_%d")

if [ "$LOG1_LENGTH" -gt "1000" ]; then mv $LOG1 $LOG1_$TODAY; fi
if [ "$LOG2_LENGTH" -gt "1000" ]; then mv $LOG2 $LOG2_$TODAY; fi

set_ARR1() {
  readarray -t ARR1 < <( find $DWNLD_DIR -type f )
}

set_ARR3() {
  ARR3=()
  readarray -t ARR2 < <( find $DWNLD_DIR -type f )
  for F in "${ARR1[@]}"; do
    if [[ "${ARR2[@]}" =~ "$F" ]]; then
      continue
    else
      ARR3+=( $F )
    fi
  done
  for F in "${ARR2[@]}"; do
    if [[ "${ARR1[@]}" =~ "$F" ]]; then
      continue
    else
      ARR3+=( $F )
    fi
  done
}


sort_pics() {
  if [ "${#ARR3[@]}" -gt "0" ]; then
#    echo "${#ARR3[@]}"
    for F in "${ARR3[@]}"; do
      B=$(basename $F)
      case $B in
        *.sh)
          sudo mv $F $UPDAT_DIR/ &&
          echo "At $NOW $F was put in $UPDAT_DIR/" >> $LOG2
          ;;
        *.[Tt][Ii][Ff][Ff] | *.[Dd][Nn][Gg] | *.[Pp][Nn][Gg] | *.[Jj][Pp][Gg] | *.[Jj][Pp][Ee][Gg] | *.[Hh][Ee][Ii][Ff] | *.[Hh][Ee][Ii][Cc])
          sudo mogrify -verbose -auto-orient $F 2>&1 | tee -a $LOG1;
          ;;
        *)
          if [ ! -d "$JUNK" ]; then mkdir -p $JUNK; fi
          sudo mv $F $JUNK/ &&
          echo "At $NOW $F was put in $JUNK/" >> $LOG1
          ;;
      esac
    done
  fi
}



if [ ! -d "$EMAILS_DIR" ]; then
  mkdir -p $EMAILS_DIR
fi
cd $DRIVE_DIR
for (( i=0; i<$LEN2; i++ )); do
  DWNLD_DIR=$EMAILS_DIR
  set_ARR1
  EMAILS="${MAILSOURCES[$i]}".mail.py
  echo " Start downloading emails at $NOW" >> $LOG1
  sudo python3 $BIN_DIR/$EMAILS 2>&1 | tee -a $LOG1
  echo " Finished downloading emails" >> $LOG1
  sudo find $DWNLD_DIR -name "* *" -exec rename -v 's/ /_/g' {} + 2>&1 | tee -a $LOG1
  set_ARR3
  if [ "${#ARR3[@]}" -gt "0" ]; then
    sort_pics
    set_ARR3
    if [ "${#ARR3[@]}" -gt "0" ]; then
        sudo rclone move -v $DWNLD_DIR ${RCSOURCES[0]}:Pictures/emails/$TODAY 2>&1 | tee -a $LOG1
    fi
  fi
done

#perfect to here

for (( i=0; i<$LEN1; i++ )); do
  DWNLD_DIR=$HOME/Pictures/"${RCSOURCES[$i]}"
  #If download directory doesnt exist, create it.
  if [ ! -d "$DWNLD_DIR" ]; then echo "sudo mkdir -p $DWNLD_DIR"; else echo "directory already exists."; fi
  set_ARR1
  sudo rclone sync -v ${RCSOURCES[$i]}:Pictures $DWNLD_DIR/
  sudo find $DWNLD_DIR -name '* *' -type f -exec rename 's/ /_/g' {} + 2>&1 | tee -a $LOG1
  set_ARR3
  if [ "${#ARR3[@]}" -gt "0" ]; then
    sort_pics
    set_ARR3
    if [ "${#ARR3[@]}" -gt "0" ]; then
      sudo rclone sync -v $DWNLD_DIR/ ${RCSOURCES[$i]}:Pictures
    fi
  fi
  while [ "$(find ~/Pictures -mindepth 1 -type d -empty)" ]; do
    sudo find ~/Pictures -mindepth 1 -type d -empty -exec rmdir {} +
  done
done

